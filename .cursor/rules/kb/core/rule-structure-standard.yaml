---
title: "Rule Structure Standard"
description: "Comprehensive specification for the structure, formatting, organization, and validation of all Cursor rules (.mdc files)."
---

# File Structure & Format
file_format:
  extension: ".mdc"
  encoding: "UTF-8"
  components:
    - frontmatter
    - title
    - body
    - summary

frontmatter:
  format: YAML
  fields:
    title:
      type: "string"
      description: "Descriptive title of the rule"
      required: true

    description:
      type: "string"
      format: "ACTION when TRIGGER to OUTCOME"
      max_length: 120
      required: true
      example: "ENFORCE when WRITING code to ENSURE consistency and maintainability"

    globs:
      type: "string|array"
      description: "File patterns the rule applies to"
      required: true
      example: ["src/**/*.js", "lib/**/*.js"]

    alwaysApply:
      type: "boolean"
      description: "Whether rule should be applied automatically"
      required: true
      default: false

    tags:
      type: "array"
      items: "string"
      description: "Categorization tags for the rule"
      required: false
      example: ["javascript", "formatting", "style"]

# Rule Description Format
description_format:
  pattern: "ACTION•TRIGGER•OUTCOME"
  components:
    action:
      description: "Imperative verb indicating what to do"
      examples: ["IMPLEMENT", "ENFORCE", "GENERATE", "FOLLOW", "APPLY"]

    trigger:
      description: "Precise context when the rule applies"
      examples: ["when DEVELOPING projects", "when WRITING code", "when CREATING components"]

    outcome:
      description: "Expected benefit or results of following the rule"
      examples: ["to ENSURE consistency", "to STANDARDIZE error handling", "to IMPROVE code readability"]

# Content Structure & Syntax
content_structure:
  format: "semantic_compression"
  title:
    format: "# Rule Title"
    position: "after frontmatter"

  required_sections:
    kb_references:
      syntax: "↹ kb•{domain} [p={priority}] { ... }"
      minimum: 1
      purpose: "Define references to external knowledge bases"
      example: |
        ↹ kb•domain [p=1] {
          ⊕ resource1: "path/to/resource1.yaml",
          ⊕ resource2: "path/to/resource2.md"
        }

    cognitive_operations:
      syntax: "↹ Ω•{operation} [p={priority}] -> [ ... ]"
      minimum: 1
      purpose: "Define the reasoning processes and steps"
      example: |
        ↹ Ω•operation [p=1] -> [
          ⊕ step1 { sub_step1, sub_step2 },
          ⊕ step2 { sub_step1, sub_step2 }
        ]

    llm_delegation:
      syntax: "↹ LLM•{role} [p={priority}] { ... }"
      minimum: 1
      purpose: "Structure the LLM's contribution and tasks"
      example: |
        ↹ LLM•role [p=1] {
          ⊕ tasks { task1, task2 },
          ⊕ inputs { input1, input2 }
        }

  recommended_sections:
    principles:
      syntax: "↹ principles•{category} [p={priority}] { ... }"
      purpose: "Define fundamental principles and values"

    constraints:
      syntax: "↹ constraints•{category} [p={priority}] { ... }"
      purpose: "Establish boundaries and cases to avoid"

    patterns:
      syntax: "↹ patterns•{category} [p={priority}] { ... }"
      purpose: "Recommend specific approaches or patterns"

  summary_section:
    syntax: "Σ"
    meaning: "Summarizes or concludes a section"
    placement: "At the end of each main section (↹)"

  other_content:
    examples:
      purpose: "Provide concrete illustrations"
      structure: "<example> ... </example>"
      variants: ["<example type=\"invalid\"> ... </example>"]

    critical:
      purpose: "Highlight non-negotiable elements"
      structure: "<critical> ... </critical>"
      format: "Bulleted list of imperative statements"

# Formatting Guidelines (from semantic-language.yaml)
formatting_guidelines:
  priority_indications:
    syntax: "[p=N]"
    meaning: "Indicates priority level (1 being the highest)"
    placement: "After the section name"

  section_markers:
    syntax: "↹"
    meaning: "Indicates the start of a logical main section"
    placement: "At the beginning of each main section"

  element_markers:
    syntax: "⊕"
    meaning: "Defines an element within a section"
    placement: "Before each element/item in a section"

  sequencing:
    syntax: "→"
    meaning: "Indicates a sequential step or flow"
    placement: "Between steps in a process"

# Organization Principles
organization_principles:
  logical_progression:
    description: "Content should flow in a logical progression"
    implementation: "Foundation → Context → Process → Details → Examples → Critical Points"

  knowledge_separation:
    description: "Separate process knowledge from domain knowledge"
    implementation: "Reference external knowledge rather than embedding it"

  progressive_disclosure:
    description: "Present information in order of importance"
    implementation: "Most important information should come first"

  hierarchical_structure:
    description: "Organize information hierarchically"
    implementation: "Use semantic notation to create clear hierarchies"

# Validation Criteria for .mdc Files
validation_criteria:
  # Structure Validation
  structure:
    - all_required_sections_present: "Rule contains kb_references, cognitive_operations, and llm_delegation sections."
    - proper_formatting: "Sections follow the prescribed semantic format (↹, ⊕, →, Σ... )."
    - hierarchical_organization: "Content is properly nested and hierarchical."
    - frontmatter_complete: "YAML frontmatter includes all required fields (title, description, globs, alwaysApply)."

  # Content Validation
  content:
    - clarity: "Content is unambiguous and precise."
    - completeness: "All essential aspects of the rule's logic are covered."
    - actionability: "Directives, especially in Ω and LLM sections, are implementable."
    - cognitive_focus: "Ω sections define 'how to think', not just 'what to know'."
    - kb_externalization: "Domain knowledge is referenced externally, not duplicated inline."
    - llm_guidance: "LLM instructions are specific and clear."
    - semantic_density: "Semantic compression is used effectively without sacrificing clarity."

  # Reference Validation
  references:
    - external_knowledge: "References to KB files (@... or path) are accurate and resolvable."
    - file_paths: "Any explicit file path references are valid."
    - documentation: "References to documentation are accurate."

# Common Mistakes to Avoid
common_mistakes:
  knowledge_inline:
    description: "Embedding domain knowledge directly within the rule."
    instead: "Reference external KB files."
    example_bad: "Listing 20 design patterns directly in the Ω section."
    example_good: "⊕ patterns_ref: \"kb:my-patterns.yaml\""

  missing_cognitive:
    description: "Failing to define the reasoning process (the 'how')."
    instead: "Provide a clear cognitive workflow in Ω sections."
    example_bad: "Simply listing facts without a decision process."
    example_good: "Defining Ω•analyze -> [⊕ step1 { check_condition → action_A }, ⊕ step2 { ... } ]"

  vague_llm_tasks:
    description: "Providing unclear or non-specific delegation to the LLM."
    instead: "Specify precise inputs, outputs, tasks, and constraints for LLM roles."
    example_bad: "↹ LLM•helper { ⊕ task: 'provide advice' }"
    example_good: "↹ LLM•analyzer { ⊕ input: 'code_snippet', ⊕ task: 'identify anti-patterns from list X', ⊕ output: 'list_of_findings' }" 